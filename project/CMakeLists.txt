cmake_minimum_required(VERSION 3.7)
project(sqleicht)

set(CMAKE_CXX_STANDARD 11)

# Download and unpack googletest at configure time
configure_file(CMakeLists.txt.in googletest-download/CMakeLists.txt)
execute_process(COMMAND ${CMAKE_COMMAND} -G "${CMAKE_GENERATOR}" .
        RESULT_VARIABLE result
        WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/googletest-download)
if (result)
    message(FATAL_ERROR "CMake step for googletest failed: ${result}")
endif ()
execute_process(COMMAND ${CMAKE_COMMAND} --build .
        RESULT_VARIABLE result
        WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/googletest-download)
if (result)
    message(FATAL_ERROR "Build step for googletest failed: ${result}")
endif ()

# Prevent overriding the parent project's compiler/linker
# settings on Windows
set(gtest_force_shared_crt ON CACHE BOOL "" FORCE)

# Add googletest directly to our build. This defines
# the gtest and gtest_main targets.
add_subdirectory(${CMAKE_BINARY_DIR}/googletest-src
        ${CMAKE_BINARY_DIR}/googletest-build)

# The gtest/gtest_main targets carry header search path
# dependencies automatically when using CMake 2.8.11 or
# later. Otherwise we have to add them here ourselves.
if (CMAKE_VERSION VERSION_LESS 2.8.11)
    include_directories("${gtest_SOURCE_DIR}/include")
endif ()

# Library files

set(LIB_FILES
        src/Database.cpp
        src/Error.cpp
        src/RawQuery.cpp src/RawQuery.h src/QueryBuilder.cpp src/QueryBuilder.h src/PreparedStatement.cpp src/PreparedStatement.h src/Cursor.cpp src/Cursor.h src/Expression.cpp src/Expression.h src/Query.cpp src/Query.h)

include_directories(src)

# Sqlite

add_library(sqlite-local SHARED src/sqlite/sqlite3.c)

# Demo target

add_executable(demo ${LIB_FILES} src/main.cpp src/RawQuery.cpp src/RawQuery.h src/Expression.cpp src/Expression.h)
target_link_libraries(demo sqlite-local dl pthread)

# Unit test files

set(TEST_FILES
        src/tests/DatabaseTest.cpp
        src/tests/QueryBuilderTest.cpp src/tests/TestTable.h)

# Test target

add_executable(tests ${LIB_FILES} ${TEST_FILES})
target_link_libraries(tests gtest_main sqlite-local dl pthread)
add_test(NAME tests COMMAND tests)
